{
  "resolvedId": "/Users/hanjeonghun/Documents/GitHub/이엔미디어_홈페이지FTP/node_modules/nuxt-schema-org/dist/runtime/nuxt/imports/useSchemaOrg.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useHead, useRuntimeConfig, useServerHead } from \"#imports\";\nexport function useSchemaOrg(input) {\n  const config = useRuntimeConfig()[\"nuxt-schema-org\"] || useRuntimeConfig().public[\"nuxt-schema-org\"];\n  const script = {\n    type: \"application/ld+json\",\n    key: \"schema-org-graph\",\n    nodes: input,\n    ...config?.scriptAttributes || {}\n  };\n  if (import.meta.server) {\n    return useServerHead({\n      script: [script]\n    });\n  } else {\n    if (config?.reactive) {\n      return useHead({\n        script: [script]\n      });\n    }\n  }\n}\n",
      "start": 1708909171247,
      "end": 1708909171267,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708909171267,
      "end": 1708909171267,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708909171267,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { useHead, useRuntimeConfig, useServerHead } from \"#imports\";\nexport function useSchemaOrg(input) {\n  const config = useRuntimeConfig()[\"nuxt-schema-org\"] || useRuntimeConfig().public[\"nuxt-schema-org\"];\n  const script = {\n    type: \"application/ld+json\",\n    key: \"schema-org-graph\",\n    nodes: input,\n    ...config?.scriptAttributes || {}\n  };\n  if (false) {\n    return useServerHead({\n      script: [script]\n    });\n  } else {\n    if (config?.reactive) {\n      return useHead({\n        script: [script]\n      });\n    }\n  }\n}\n",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAkB,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useHead, useServerHead } from '@unhead/vue';\nimport { useRuntimeConfig } from '#app/nuxt';\nexport function useSchemaOrg(input) {\n  const config = useRuntimeConfig()[\"nuxt-schema-org\"] || useRuntimeConfig().public[\"nuxt-schema-org\"];\n  const script = {\n    type: \"application/ld+json\",\n    key: \"schema-org-graph\",\n    nodes: input,\n    ...config?.scriptAttributes || {}\n  };\n  if (false) {\n    return useServerHead({\n      script: [script]\n    });\n  } else {\n    if (config?.reactive) {\n      return useHead({\n        script: [script]\n      });\n    }\n  }\n}\n",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708909171268,
      "end": 1708909171268,
      "order": "normal"
    }
  ]
}
