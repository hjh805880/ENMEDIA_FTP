{
  "resolvedId": "/Users/hanjeonghun/Documents/GitHub/이엔미디어_홈페이지FTP/node_modules/site-config-stack/dist/urls.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { hasProtocol, parseURL, withLeadingSlash, withBase, withTrailingSlash, withoutTrailingSlash } from 'ufo';\n\nfunction resolveSitePath(pathOrUrl, options) {\n  let path = pathOrUrl;\n  if (hasProtocol(pathOrUrl, { strict: false, acceptRelative: true })) {\n    const parsed = parseURL(pathOrUrl);\n    path = parsed.pathname;\n  }\n  const base = withLeadingSlash(options.base || \"/\");\n  if (base !== \"/\" && path.startsWith(base)) {\n    path = path.slice(base.length);\n  }\n  const origin = options.absolute ? options.siteUrl : \"\";\n  const baseWithOrigin = options.withBase ? withBase(base, origin || \"/\") : origin;\n  const resolvedUrl = withBase(path, baseWithOrigin);\n  return path === \"/\" && !options.withBase ? withTrailingSlash(resolvedUrl) : fixSlashes(options.trailingSlash, resolvedUrl);\n}\nfunction fixSlashes(trailingSlash, pathOrUrl) {\n  const $url = parseURL(pathOrUrl);\n  const isFileUrl = $url.pathname.includes(\".\");\n  if (isFileUrl)\n    return pathOrUrl;\n  const fixedPath = trailingSlash ? withTrailingSlash($url.pathname) : withoutTrailingSlash($url.pathname);\n  return `${$url.protocol ? `${$url.protocol}//` : \"\"}${$url.host || \"\"}${fixedPath}${$url.search || \"\"}${$url.hash || \"\"}`;\n}\n\nexport { fixSlashes, resolveSitePath };\n",
      "start": 1708047633318,
      "end": 1708047633365,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre"
    },
    {
      "name": "transform-file",
      "result": "import { hasProtocol, parseURL, withLeadingSlash, withBase, withTrailingSlash, withoutTrailingSlash } from 'ufo';\n\nfunction resolveSitePath(pathOrUrl, options) {\n  let path = pathOrUrl;\n  if (hasProtocol(pathOrUrl, { strict: false, acceptRelative: true })) {\n    const parsed = parseURL(pathOrUrl);\n    path = parsed.pathname;\n  }\n  const base = withLeadingSlash(options.base || \"/\");\n  if (base !== \"/\" && path.startsWith(base)) {\n    path = path.slice(base.length);\n  }\n  const origin = options.absolute ? options.siteUrl : \"\";\n  const baseWithOrigin = options.withBase ? withBase(base, origin || \"/\") : origin;\n  const resolvedUrl = withBase(path, baseWithOrigin);\n  return path === \"/\" && !options.withBase ? withTrailingSlash(resolvedUrl) : fixSlashes(options.trailingSlash, resolvedUrl);\n}\nfunction fixSlashes(trailingSlash, pathOrUrl) {\n  const $url = parseURL(pathOrUrl);\n  const isFileUrl = $url.pathname.includes(\".\");\n  if (isFileUrl)\n    return pathOrUrl;\n  const fixedPath = trailingSlash ? withTrailingSlash($url.pathname) : withoutTrailingSlash($url.pathname);\n  return `${$url.protocol ? `${$url.protocol}//` : \"\"}${$url.host || \"\"}${fixedPath}${$url.search || \"\"}${$url.hash || \"\"}`;\n}\n\nexport { fixSlashes, resolveSitePath };\n",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre",
      "sourcemaps": null
    },
    {
      "name": "transform-file",
      "result": "import { hasProtocol, parseURL, withLeadingSlash, withBase, withTrailingSlash, withoutTrailingSlash } from 'ufo';\n\nfunction resolveSitePath(pathOrUrl, options) {\n  let path = pathOrUrl;\n  if (hasProtocol(pathOrUrl, { strict: false, acceptRelative: true })) {\n    const parsed = parseURL(pathOrUrl);\n    path = parsed.pathname;\n  }\n  const base = withLeadingSlash(options.base || \"/\");\n  if (base !== \"/\" && path.startsWith(base)) {\n    path = path.slice(base.length);\n  }\n  const origin = options.absolute ? options.siteUrl : \"\";\n  const baseWithOrigin = options.withBase ? withBase(base, origin || \"/\") : origin;\n  const resolvedUrl = withBase(path, baseWithOrigin);\n  return path === \"/\" && !options.withBase ? withTrailingSlash(resolvedUrl) : fixSlashes(options.trailingSlash, resolvedUrl);\n}\nfunction fixSlashes(trailingSlash, pathOrUrl) {\n  const $url = parseURL(pathOrUrl);\n  const isFileUrl = $url.pathname.includes(\".\");\n  if (isFileUrl)\n    return pathOrUrl;\n  const fixedPath = trailingSlash ? withTrailingSlash($url.pathname) : withoutTrailingSlash($url.pathname);\n  return `${$url.protocol ? `${$url.protocol}//` : \"\"}${$url.host || \"\"}${fixedPath}${$url.search || \"\"}${$url.hash || \"\"}`;\n}\n\nexport { fixSlashes, resolveSitePath };\n",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre",
      "sourcemaps": null
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "unhead:remove-server-composables",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708047633366,
      "end": 1708047633366,
      "order": "normal"
    }
  ]
}
