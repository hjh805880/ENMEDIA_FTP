{
  "resolvedId": "/Users/hanjeonghun/Documents/GitHub/이엔미디어_홈페이지FTP/node_modules/nuxt-site-config/dist/runtime/nuxt/composables/useSiteConfig.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defu } from \"defu\";\nimport {\n  useNuxtApp,\n  useRequestEvent\n} from \"#imports\";\nexport function useSiteConfig(options) {\n  let stack;\n  if (process.server)\n    stack = useRequestEvent().context.siteConfig.get(defu({ resolveRefs: true }, options));\n  else\n    stack = useNuxtApp().$nuxtSiteConfig;\n  return stack || {};\n}\n",
      "start": 1707272758524,
      "end": 1707272758572,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707272758572,
      "end": 1707272758572,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { defu } from \"defu\";\nimport {\n  useNuxtApp,\n  useRequestEvent\n} from \"#imports\";\nexport function useSiteConfig(options) {\n  let stack;\n  if (true)\n    stack = useRequestEvent().context.siteConfig.get(defu({ resolveRefs: true }, options));\n  else\n    stack = useNuxtApp().$nuxtSiteConfig;\n  return stack || {};\n}\n",
      "start": 1707272758572,
      "end": 1707272758767,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/hanjeonghun/Documents/GitHub/이엔미디어_홈페이지FTP/node_modules/nuxt-site-config/dist/runtime/nuxt/composables/useSiteConfig.mjs\"],\n  \"sourcesContent\": [\"import { defu } from \\\"defu\\\";\\nimport {\\n  useNuxtApp,\\n  useRequestEvent\\n} from \\\"#imports\\\";\\nexport function useSiteConfig(options) {\\n  let stack;\\n  if (process.server)\\n    stack = useRequestEvent().context.siteConfig.get(defu({ resolveRefs: true }, options));\\n  else\\n    stack = useNuxtApp().$nuxtSiteConfig;\\n  return stack || {};\\n}\\n\"],\n  \"mappings\": \"AAAA,SAAS,YAAY;AACrB;AAAA,EACE;AAAA,EACA;AAAA,OACK;AACA,gBAAS,cAAc,SAAS;AACrC,MAAI;AACJ,MAAI;AACF,YAAQ,gBAAgB,EAAE,QAAQ,WAAW,IAAI,KAAK,EAAE,aAAa,KAAK,GAAG,OAAO,CAAC;AAAA;AAErF,YAAQ,WAAW,EAAE;AACvB,SAAO,SAAS,CAAC;AACnB;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "post"
    },
    {
      "name": "unhead:remove-server-composables",
      "start": 1707272758767,
      "end": 1707272758767,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1707272758767,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1707272758767,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useNuxtApp } from '#app/nuxt';\nimport { useRequestEvent } from '#app/composables/ssr';\nimport { defu } from \"defu\";\nexport function useSiteConfig(options) {\n  let stack;\n  if (true)\n    stack = useRequestEvent().context.siteConfig.get(defu({ resolveRefs: true }, options));\n  else\n    stack = useNuxtApp().$nuxtSiteConfig;\n  return stack || {};\n}\n",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAK5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useNuxtApp } from '#app/nuxt';\nimport { useRequestEvent } from '#app/composables/ssr';\nimport { defu } from \"defu\";\nexport function useSiteConfig(options) {\n  let stack;\n  if (true)\n    stack = useRequestEvent().context.siteConfig.get(defu({ resolveRefs: true }, options));\n  else\n    stack = useNuxtApp().$nuxtSiteConfig;\n  return stack || {};\n}\n",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAK5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707272758768,
      "end": 1707272758768,
      "order": "normal"
    }
  ]
}
